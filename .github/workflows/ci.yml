name: statistics generator ci

on:
    workflow_dispatch:
    pull_request:
        types:
            - opened
            - synchronize
    push:
        branches:
            - main

permissions:
    id-token: write
    contents: read

jobs:
    lint:
        if: ${{ github.event_name == 'pull_request' || github.event_name == 'workflow_dispatch' }}
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            
            - uses: r-lib/actions/setup-r@v2
              with:
                use-public-rspm: true

            - run: Rscript install_packages.R

            - run: install.packages("lintr")
              shell: Rscript {0}
            
            - run: lintr::lint("reactome-stats-package/run.R")
              shell: Rscript {0}
              env:
                LINTR_ERROR_ON_LINT: true

            - run: lintr::lint("reactome-stats-package/statistics_functions.R")
              shell: Rscript {0}
              env:
                LINTR_ERROR_ON_LINT: true

            - run: lintr::lint("reactome-stats-package/connect_neo4j.R")
              shell: Rscript {0}
              env:
                LINTR_ERROR_ON_LINT: true

    docker-build:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4

            - uses: docker/setup-buildx-action@v3
            
            - uses: docker/build-push-action@v5
              with:
                context: .
                file: Dockerfile
                tags: statistics-generator:${{ github.sha }}
                outputs: type=docker,dest=/tmp/image.tar

            - uses: actions/upload-artifact@v4
              with:
                name: image-artifact
                path: /tmp/image.tar

    docker-push:
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
        needs: docker-build
        runs-on: ubuntu-latest
        steps:
            - uses: actions/download-artifact@v4
              with:
                name: image-artifact
                path: /tmp

            - id: get-hash
              run: |
                FULL_SHA=${{ github.sha }}
                echo "SHORT_SHA=${FULL_SHA:0:7}" >> $GITHUB_OUTPUT
            
            - env:
                AWS_REGION: us-east-1
              uses: aws-actions/configure-aws-credentials@v4
              with:
                role-to-assume: ${{ vars.AWS_ROLE }}
                aws-region: ${{ env.AWS_REGION }}
    
            - id: login-ecr
              uses: aws-actions/amazon-ecr-login@v2
              with:
                registry-type: public

            - env:
                AWS_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
                AWS_REGISTRY_ALIAS: reactome
                AWS_REPO: statistics-generator
                IMG_TAG: ${{ steps.get-hash.outputs.SHORT_SHA }}
              run: |
                docker load --input /tmp/image.tar
                docker image tag statistics-generator:${{ github.sha }} $AWS_REGISTRY/$AWS_REGISTRY_ALIAS/$AWS_REPO:$IMG_TAG
                docker image tag statistics-generator:${{ github.sha }} $AWS_REGISTRY/$AWS_REGISTRY_ALIAS/$AWS_REPO:latest
                docker push $AWS_REGISTRY/$AWS_REGISTRY_ALIAS/$AWS_REPO:$IMG_TAG
                docker push $AWS_REGISTRY/$AWS_REGISTRY_ALIAS/$AWS_REPO:latest
